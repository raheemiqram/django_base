# Generated by Django 4.2 on 2023-05-09 08:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Audience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_execute_count', models.IntegerField(blank=True, default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('initiated', 'Initiated'), ('sent', 'Sent'), ('fail', 'Fail')], default='initiated', max_length=16)),
                ('type', models.CharField(blank=True, choices=[('manual', 'Manual'), ('auto', 'Auto')], default='auto', help_text='If select manual need to set user ids(comma separated) in manual values ', max_length=16)),
                ('total_audience', models.IntegerField(blank=True, default=0)),
                ('total_execute_audience', models.IntegerField(blank=True, default=0)),
                ('manual_values', models.TextField(blank=True, help_text='manual values should be comma separated')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalAudience',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_execute_count', models.IntegerField(blank=True, default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical audience',
                'verbose_name_plural': 'historical audiences',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('condition', models.CharField(choices=[('OR', 'OR'), ('AND', 'AND')], default='AND', max_length=3)),
                ('filter', models.CharField(choices=[('all_customer', 'All Customer'), ('custom_customer', 'Custom Customer'), ('name', 'Name'), ('email', 'Email'), ('country', 'Country'), ('is_super_user', 'is Super User'), ('is_staff', 'Is Staff')], max_length=50)),
                ('value', models.TextField(blank=True)),
                ('operator', models.CharField(choices=[('equal', 'Equal'), ('icontains', 'Contains'), ('in', 'In'), ('gt', 'Grater than'), ('gte', 'Grater than equal'), ('lt', 'Less than'), ('lte', 'Less than equal'), ('startswith', 'Start with'), ('range', 'Range'), ('exist', 'Exist')], max_length=255)),
                ('audience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketing.audience')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalRule',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('condition', models.CharField(choices=[('OR', 'OR'), ('AND', 'AND')], default='AND', max_length=3)),
                ('filter', models.CharField(choices=[('all_customer', 'All Customer'), ('custom_customer', 'Custom Customer'), ('name', 'Name'), ('email', 'Email'), ('country', 'Country'), ('is_super_user', 'is Super User'), ('is_staff', 'Is Staff')], max_length=50)),
                ('value', models.TextField(blank=True)),
                ('operator', models.CharField(choices=[('equal', 'Equal'), ('icontains', 'Contains'), ('in', 'In'), ('gt', 'Grater than'), ('gte', 'Grater than equal'), ('lt', 'Less than'), ('lte', 'Less than equal'), ('startswith', 'Start with'), ('range', 'Range'), ('exist', 'Exist')], max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('audience', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='marketing.audience')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rule',
                'verbose_name_plural': 'historical rules',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCampaign',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('initiated', 'Initiated'), ('sent', 'Sent'), ('fail', 'Fail')], default='initiated', max_length=16)),
                ('type', models.CharField(blank=True, choices=[('manual', 'Manual'), ('auto', 'Auto')], default='auto', help_text='If select manual need to set user ids(comma separated) in manual values ', max_length=16)),
                ('total_audience', models.IntegerField(blank=True, default=0)),
                ('total_execute_audience', models.IntegerField(blank=True, default=0)),
                ('manual_values', models.TextField(blank=True, help_text='manual values should be comma separated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('audience', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='marketing.audience')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical campaign',
                'verbose_name_plural': 'historical campaigns',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
